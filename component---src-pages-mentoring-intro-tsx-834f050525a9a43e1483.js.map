{"version":3,"sources":["webpack:///./src/components/Jumbotrons/MentoringJumbotron.tsx","webpack:///./src/pages/mentoring/intro.tsx","webpack:///./src/components/DescriptionSection/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","padding","spacing","title","whiteSpace","fontWeight","typography","fontWeightMedium","color","palette","primary","main","fontWeightBold","description","margin","MentoringJumbotron","containerRef","useRef","styles","hiAnimation","useSpring","from","opacity","transform","to","titleAnimation","delay","descriptionAnimation","ref","className","div","style","Typography","variant","component","gutterBottom","Emoji","emoji","name","MentoringIntro","Page","pageName","Container","DescriptionSection","section","header","marginBottom","whiteSpacePre","children","container","item","xs"],"mappings":"mMAKMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAYH,EAAMI,QAAQ,GAAnB,QAETC,MAAO,CACLC,WAAY,SACZC,WAAYP,EAAMQ,WAAWC,iBAC7B,WAAY,CACVC,MAAOV,EAAMW,QAAQC,QAAQC,KAC7BN,WAAYP,EAAMQ,WAAWM,iBAGjCC,YAAa,CACXC,OAAQ,EACRT,WAAYP,EAAMQ,WAAWC,uBAkDpBQ,EA7CY,WACzB,IAAMC,EAAeC,iBAAuB,MACtCC,EAAStB,IAETuB,EAAcC,YAAU,CAC5BC,KAAM,CAAEC,QAAS,EAAGC,UAAW,qBAC/BC,GAAI,CAAEF,QAAS,EAAGC,UAAW,mBAEzBE,EAAiBL,YAAU,CAC/BC,KAAM,CAAEC,QAAS,EAAGC,UAAW,qBAC/BC,GAAI,CAAEF,QAAS,EAAGC,UAAW,iBAC7BG,MAAO,MAEHC,EAAuBP,YAAU,CACrCC,KAAM,CAAEC,QAAS,EAAGC,UAAW,qBAC/BC,GAAI,CAAEF,QAAS,EAAGC,UAAW,iBAC7BG,MAAO,MAGT,OACE,yBAAKE,IAAKZ,EAAca,UAAWX,EAAOlB,MACxC,6BACE,kBAAC,IAAS8B,IAAV,CAAcC,MAAOZ,GACnB,kBAACa,EAAA,EAAD,CAAYH,UAAWX,EAAOL,aAA9B,eAEF,kBAAC,IAASiB,IAAV,CAAcC,MAAON,GACnB,kBAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,cAAc,EAAMN,UAAWX,EAAOf,OAC5E,oDADF,iBACiD,kBAACiC,EAAA,EAAD,CAAOC,MAAM,KAAKC,KAAK,SAG1E,kBAAC,IAASR,IAAV,CAAcC,MAAOJ,GACnB,kBAACK,EAAA,EAAD,KACE,gDADF,IAEE,6BAFF,wGAKE,6BALF,wD,wBCrCKO,UAbQ,WACrB,OACE,kBAACC,EAAA,EAAD,CAAMC,SAAS,gBACb,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CAAoBxC,MAAM,iBAAiBU,YAAY,IAAvD,U,kCCXR,6DASMjB,EAAYC,aAAkB,gBAAGK,EAAH,EAAGA,QAAH,MAAkB,CACpD0C,QAAS,CACP3C,QAAS,OAAOC,EAAQ,IAAjB,MAET2C,OAAQ,CACNC,aAAc5C,EAAQ,IAExBC,MAAO,CACLE,WAAY,QAEd0C,cAAe,CACb3C,WAAY,gBA8BDuC,IA1BY,SAAC,GAA4C,IAA1CxC,EAA0C,EAA1CA,MAAOU,EAAmC,EAAnCA,YAAamC,EAAsB,EAAtBA,SAC1CjB,EAAQnC,IACd,OACE,kBAAC,IAAD,CAAMsC,UAAU,UAAUL,UAAWE,EAAMa,QAASK,WAAS,GAC3D,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAItB,UAAWE,EAAMc,QAClC,kBAAC,IAAD,CAAMM,GAAI,GAAID,MAAI,GAChB,kBAAC,IAAD,CACEjB,QAAQ,KACRC,UAAU,KACVC,cAAc,EACdN,UAAcE,EAAMgB,cAAX,IAA4BhB,EAAM5B,OAE1CA,IAGL,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY8B,QAAQ,QAAQzB,MAAM,gBAAgBqB,UAAWE,EAAMgB,eAChElC,KAIP,6BAAMmC","file":"component---src-pages-mentoring-intro-tsx-834f050525a9a43e1483.js","sourcesContent":["import React, { useRef } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { makeStyles, Theme, createStyles, Typography } from '@material-ui/core';\nimport Emoji from '../Utils/Emoji';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: `${theme.spacing(5)}px 0`,\n    },\n    title: {\n      whiteSpace: 'nowrap',\n      fontWeight: theme.typography.fontWeightMedium,\n      '& strong': {\n        color: theme.palette.primary.main,\n        fontWeight: theme.typography.fontWeightBold,\n      },\n    },\n    description: {\n      margin: 0,\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n  })\n);\n\nconst MentoringJumbotron = () => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const styles = useStyles();\n\n  const hiAnimation = useSpring({\n    from: { opacity: 0, transform: 'translateX(-30px)' },\n    to: { opacity: 1, transform: 'translateX(0)' },\n  });\n  const titleAnimation = useSpring({\n    from: { opacity: 0, transform: 'translateX(-30px)' },\n    to: { opacity: 1, transform: 'translateX(0)' },\n    delay: 300,\n  });\n  const descriptionAnimation = useSpring({\n    from: { opacity: 0, transform: 'translateX(-30px)' },\n    to: { opacity: 1, transform: 'translateX(0)' },\n    delay: 600,\n  });\n\n  return (\n    <div ref={containerRef} className={styles.root}>\n      <div>\n        <animated.div style={hiAnimation}>\n          <Typography className={styles.description}>Hi, there.</Typography>\n        </animated.div>\n        <animated.div style={titleAnimation}>\n          <Typography variant=\"h3\" component=\"h1\" gutterBottom={true} className={styles.title}>\n            <strong>Lubycon 멘토링 프로젝트</strong>에 오신 것을 환영합니다 <Emoji emoji=\"👋\" name=\"hi\" />\n          </Typography>\n        </animated.div>\n        <animated.div style={descriptionAnimation}>\n          <Typography>\n            <strong>루비콘 멘토링 프로젝트</strong>는\n            <br />\n            개발자와 디자이너들이 모인 루비콘 팀의 멤버들이 자신이 쌓아온 지식과 경험을 다른 사람들에게 공유하고 IT\n            업계의 생태계에 선한 이펙트를 주고 싶다는 취지에서 출발한 프로젝트입니다.\n            <br />\n            수많은 성장의 방향 속에서 길을 잃고 있는 분들에게 조금이나마 도움이 되었으면 합니다.\n          </Typography>\n        </animated.div>\n      </div>\n    </div>\n  );\n};\n\nexport default MentoringJumbotron;\n","import { Container } from '@material-ui/core';\nimport React from 'react';\nimport Jumbotron from 'src/components/Jumbotrons/MentoringJumbotron';\nimport Page from 'src/components/Layout/Page';\nimport DescriptionSection from 'src/components/DescriptionSection';\n\nconst MentoringIntro = () => {\n  return (\n    <Page pageName=\"루비콘 멘토링 프로젝트\">\n      <Container>\n        <Jumbotron />\n        <DescriptionSection title=\"무엇을 배워갈 수 있나요?\" description=\"\">\n          hi\n        </DescriptionSection>\n      </Container>\n    </Page>\n  );\n};\n\nexport default MentoringIntro;\n","import React, { ReactNode } from 'react';\nimport { Grid, makeStyles, Typography, Theme } from '@material-ui/core';\n\ninterface Props {\n  title: string;\n  description: string;\n  children: ReactNode;\n}\n\nconst useStyles = makeStyles<Theme>(({ spacing }) => ({\n  section: {\n    padding: `0 0 ${spacing(15)}px`,\n  },\n  header: {\n    marginBottom: spacing(3),\n  },\n  title: {\n    fontWeight: 'bold',\n  },\n  whiteSpacePre: {\n    whiteSpace: 'pre-line',\n  },\n}));\n\nconst DescriptionSection = ({ title, description, children }: Props) => {\n  const style = useStyles();\n  return (\n    <Grid component=\"section\" className={style.section} container>\n      <Grid item xs={12} className={style.header}>\n        <Grid xs={12} item>\n          <Typography\n            variant=\"h5\"\n            component=\"h2\"\n            gutterBottom={true}\n            className={`${style.whiteSpacePre} ${style.title}`}\n          >\n            {title}\n          </Typography>\n        </Grid>\n        <Grid>\n          <Typography variant=\"body2\" color=\"textSecondary\" className={style.whiteSpacePre}>\n            {description}\n          </Typography>\n        </Grid>\n      </Grid>\n      <div>{children}</div>\n    </Grid>\n  );\n};\n\nexport default DescriptionSection;\n"],"sourceRoot":""}